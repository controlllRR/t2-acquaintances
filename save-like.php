<?php
error_reporting(E_ALL);
ini_set('display_errors', 1);

header('Content-Type: application/json');

// –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
$data = json_decode(file_get_contents('php://input'), true);
$currentUserId = $data['currentUserId'] ?? null;
$ownerUserId = $data['ownerUserId'] ?? null;
$matchesFilePath = 'matches.json';
$basaFilePath = 'basa.json';

if (!$currentUserId || !$ownerUserId) {
    echo json_encode(['error' => '–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ç—Ä–µ–±—É–µ–º—ã–µ –¥–∞–Ω–Ω—ã–µ']);
    exit;
}

try {
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ basa.json
    if (!file_exists($basaFilePath)) {
        throw new Exception('–§–∞–π–ª basa.json –Ω–µ –Ω–∞–π–¥–µ–Ω.');
    }
    $users = json_decode(file_get_contents($basaFilePath), true);

    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –º–∞—Ç—á–∏
    $matches = [];
    if (file_exists($matchesFilePath)) {
        $matches = json_decode(file_get_contents($matchesFilePath), true);
    }

    // –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –º–∞—Ç—á–µ–π
    function updateMatches($currentUserId, $ownerUserId, &$matches, $users) {
        $key = "$currentUserId-$ownerUserId";
        $reverseKey = "$ownerUserId-$currentUserId";

        $ownerUserInfo = $users[$ownerUserId] ?? null;
        $currentUserInfo = $users[$currentUserId] ?? null;

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –º–∞—Ç—á
        if (isset($matches[$key])) {
            return ['match' => false]; // –ú–∞—Ç—á —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        }

        // –ï—Å–ª–∏ –æ–±—Ä–∞—Ç–Ω—ã–π –º–∞—Ç—á –æ–∂–∏–¥–∞–µ—Ç –≤–∑–∞–∏–º–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
        if (isset($matches[$reverseKey]) && $matches[$reverseKey]['status'] === '–æ–∂–∏–¥–∞–µ—Ç –≤–∑–∞–∏–º–Ω–æ') {
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤–∑–∞–∏–º–Ω–æ–≥–æ –º–∞—Ç—á–∞
            $matches[$key] = [
                'current_user_id' => $currentUserId,
                'owner_user_id' => $ownerUserId,
                'status' => '–≤–∑–∞–∏–º–Ω–æ',
            ];
            $matches[$reverseKey]['status'] = '–≤–∑–∞–∏–º–Ω–æ';

            // –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–∞–∂–¥–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            $matchInfoForOwner = [
                'name' => $currentUserInfo['name'] ?? '–ò–º—è –Ω–µ —É–∫–∞–∑–∞–Ω–æ',
                'age' => calculateAge($currentUserInfo['birthdate']) ?? '–í–æ–∑—Ä–∞—Å—Ç –Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω',
                'description' => $currentUserInfo['about'] ?? '–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è',
                'telegram' => $currentUserInfo['telegram'] ?? '–ù–µ —É–∫–∞–∑–∞–Ω–æ',
            ];
            $matchInfoForCurrent = [
                'name' => $ownerUserInfo['name'] ?? '–ò–º—è –Ω–µ —É–∫–∞–∑–∞–Ω–æ',
                'age' => calculateAge($ownerUserInfo['birthdate']) ?? '–í–æ–∑—Ä–∞—Å—Ç –Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω',
                'description' => $ownerUserInfo['about'] ?? '–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è',
                'telegram' => $ownerUserInfo['telegram'] ?? '–ù–µ —É–∫–∞–∑–∞–Ω–æ',
            ];

            // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
            sendTelegramMessage($matchInfoForOwner, $currentUserInfo['telegram']);
            sendTelegramMessage($matchInfoForCurrent, $ownerUserInfo['telegram']);

            return ['match' => true];
        }

        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –º–∞—Ç—á
        $matches[$key] = [
            'current_user_id' => $currentUserId,
            'owner_user_id' => $ownerUserId,
            'status' => '–æ–∂–∏–¥–∞–µ—Ç –≤–∑–∞–∏–º–Ω–æ'
        ];

        return ['match' => false];
    }

    // –§—É–Ω–∫—Ü–∏—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –≤–æ–∑—Ä–∞—Å—Ç–∞
    function calculateAge($birthdate) {
        if (!$birthdate) return null;
        $birthDate = new DateTime($birthdate);
        $now = new DateTime();
        return $now->diff($birthDate)->y;
    }

    // –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π —á–µ—Ä–µ–∑ Telegram
    function sendTelegramMessage($matchInfo, $chatId) {
        $botToken = "8152176386:AAEYnkP9yOMcODbwNh1CbZMSWc2MHpke6bc"; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω

        // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        $message = "<b>–£ –≤–∞—Å –Ω–æ–≤—ã–π –º—ç—Ç—á!</b>\n" .
                   "–í–∞—Å –ª–∞–π–∫–Ω—É–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {$matchInfo['name']}, {$matchInfo['age']} –ª–µ—Ç.\n" .
                   "–û–ø–∏—Å–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {$matchInfo['description']}\n" .
                   "<b>Telegram –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>: {$matchInfo['telegram']}\n" .
                   "<b>–•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è üòâ</b>";

        $url = "https://api.telegram.org/bot$botToken/sendMessage?chat_id=$chatId&text=" . urlencode($message) . "&parse_mode=HTML";
        
        // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ URL –ø–µ—Ä–µ–¥ –∑–∞–ø—Ä–æ—Å–æ–º
        error_log("–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ Telegram –ø–æ URL: $url");

        $response = file_get_contents($url); // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
        $responseData = json_decode($response, true);

        // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç Telegram
        error_log("–û—Ç–≤–µ—Ç –æ—Ç Telegram: " . json_encode($responseData));

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–≤–µ—Ç–∞ –æ—Ç Telegram
        if (isset($responseData['ok']) && $responseData['ok']) {
            return true; // –£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ
        } else {
            error_log("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram: " . json_encode($responseData)); // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∏
            return false; // –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏
        }
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–∞—Ç—á–µ–π
    $result = updateMatches($currentUserId, $ownerUserId, $matches, $users);

    // –ó–∞–ø–∏—Å—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ —Ñ–∞–π–ª
    if (file_put_contents($matchesFilePath, json_encode($matches, JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE)) !== false) {
        echo json_encode($result);
    } else {
        throw new Exception('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –≤ —Ñ–∞–π–ª matches.json');
    }

} catch (Exception $e) {
    echo json_encode(['error' => $e->getMessage()]);
}